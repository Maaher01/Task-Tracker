{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","Header","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4488bd10.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n    return (\r\n        <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'steelblue',\r\n}\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    onClick: PropTypes.func,\r\n}\r\n\r\nexport default Button\r\n","import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nexport const header = ({ title, onAdd, showAdd }) => {\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add +'} onClick={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\nheader.defaultProps = {\r\n    title: 'Task Tracker',\r\n}\r\n\r\nheader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default header","import { FaTimes } from 'react-icons/fa'\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n            <h3>{task.text}<FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} /></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n    return (\r\n        <>\r\n            {tasks.map((task) => (\r\n                <Task\r\n                    key={task.id}\r\n                    task={task}\r\n                    onDelete={onDelete}\r\n                    onToggle={onToggle}\r\n                />\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks","import { useState } from 'react'\r\n\r\nexport const AddTask = ({ onAdd }) => {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        onAdd({ text, day, reminder })\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>New Task</label>\r\n                <input type='text' placeholder='Add Task...' value={text} onChange={(e) => setText(e.target.value)} ></input>\r\n            </div>\r\n            <div className='form-control'>\r\n                <label>Date and Time</label>\r\n                <input type='text' placeholder='Add Date and Time...' value={day} onChange={(e) => setDay(e.target.value)}></input>\r\n            </div>\r\n            <div className='form-control form-control-check'>\r\n                <label>Reminder</label>\r\n                <input type='checkbox' checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)}></input>\r\n            </div>\r\n            <input className='btn btn-block' type='submit' value='Save Task'></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask","import { useState, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  //Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  //Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  //Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks/', { method: 'POST', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(task) })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n  }\r\n\r\n  //Delete Task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE', })\r\n\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  //Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id)\r\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, { method: 'PUT', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(updatedTask), })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n      {showAddTask && <AddTask onAdd={addTask} />}{tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No tasks to show')}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}