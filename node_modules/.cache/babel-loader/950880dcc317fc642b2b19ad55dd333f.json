{"ast":null,"code":"var _jsxFileName = \"D:\\\\Task-Tracker\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); //Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data;\n  }; //Fetch Task\n\n\n  const fetchTask = async id => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data;\n  }; //Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks/', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]);\n  }; //Delete Task\n\n\n  const deleteTask = async id => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //Toggle Reminder\n\n\n  const toggleReminder = async id => {\n    const taskToToggle = await fetchTask(id);\n    const updatedTask = { ...taskToToggle,\n      reminder: !taskToToggle.reminder\n    };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: data.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 72\n    }, this) : 'No tasks to show']\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","fetchTask","id","addTask","task","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updatedTask","reminder","map","length"],"sources":["D:/Task-Tracker/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport AddTask from './components/AddTask'\r\n\r\nconst App = () => {\r\n  const [showAddTask, setShowAddTask] = useState(false)\r\n  const [tasks, setTasks] = useState([])\r\n\r\n  useEffect(() => {\r\n    const getTasks = async () => {\r\n      const tasksFromServer = await fetchTasks()\r\n      setTasks(tasksFromServer)\r\n    }\r\n\r\n    getTasks()\r\n  }, [])\r\n\r\n  //Fetch Tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch('http://localhost:5000/tasks')\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  //Fetch Task\r\n  const fetchTask = async (id) => {\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`)\r\n    const data = await res.json()\r\n\r\n    return data\r\n  }\r\n\r\n  //Add Task\r\n  const addTask = async (task) => {\r\n    const res = await fetch('http://localhost:5000/tasks/', { method: 'POST', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(task) })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks([...tasks, data])\r\n  }\r\n\r\n  //Delete Task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`http://localhost:5000/tasks/${id}`, { method: 'DELETE', })\r\n\r\n    setTasks(tasks.filter((task) => task.id !== id))\r\n  }\r\n\r\n  //Toggle Reminder\r\n  const toggleReminder = async (id) => {\r\n    const taskToToggle = await fetchTask(id)\r\n    const updatedTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\r\n\r\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, { method: 'PUT', headers: { 'Content-type': 'application/json' }, body: JSON.stringify(updatedTask), })\r\n\r\n    const data = await res.json()\r\n\r\n    setTasks(\r\n      tasks.map((task) => task.id === id ? { ...task, reminder: data.reminder } : task)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\r\n      {showAddTask && <AddTask onAdd={addTask} />}{tasks.length > 0 ? (<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />) : ('No tasks to show')}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module"}